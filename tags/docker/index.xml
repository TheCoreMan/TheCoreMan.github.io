<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on mrnice.dev</title>
    <link>https://www.mrnice.dev/tags/docker/</link>
    <description>Recent content in Docker on mrnice.dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Oct 2021 20:04:53 +0300</lastBuildDate>
    <atom:link href="https://www.mrnice.dev/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>We Built a Slack Bot for Valet Parking Services: üÖøÔ∏èart 3 | The Data</title>
      <link>https://www.mrnice.dev/posts/building-a-slack-bot-with-python-on-gcp-part-3/</link>
      <pubDate>Sun, 31 Oct 2021 20:04:53 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/building-a-slack-bot-with-python-on-gcp-part-3/</guid>
      <description>&lt;p&gt;Part three of the joint project with my incredibly sharp wife,&#xA;&lt;a href=&#34;https://www.linkedin.com/in/olga-nehmad/&#34;&gt;Olga&lt;/a&gt;!&lt;/p&gt;&#xA;&lt;p&gt;This post is a part of a series, so [check out the entire series for context]&#xA;(&lt;a href=&#34;https://www.mrnice.dev/tags/slack/)&#34;&gt;https://www.mrnice.dev/tags/slack/)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In this post, we&amp;rsquo;ll dive into how we&amp;rsquo;ve implemented a Database in our&#xA;application. The post starts with the design, then moves to implementation of&#xA;DB connectivity, then the data models themselves, and finally some testing.&lt;/p&gt;&#xA;&lt;p&gt;Upfront, we had to decide if we&amp;rsquo;ll choose a relational database or something&#xA;else - and we decided to go relational. This could be a super interesting&#xA;decisions with many factors going into it - but in reality, we chose relational&#xA;because it&amp;rsquo;s to most relevant for us to practice right now :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>We Built a Slack Bot for Valet Parking Services: üÖøÔ∏èart 2 | The Logic</title>
      <link>https://www.mrnice.dev/posts/building-a-slack-bot-with-python-on-gcp-part-2/</link>
      <pubDate>Tue, 28 Sep 2021 12:23:06 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/building-a-slack-bot-with-python-on-gcp-part-2/</guid>
      <description>&lt;p&gt;Part two of the joint project with my intelligent and brave wife,&#xA;&lt;a href=&#34;https://www.linkedin.com/in/olga-beskrovniy-4469b276/&#34;&gt;Olga&lt;/a&gt;!&lt;/p&gt;&#xA;&lt;p&gt;This post is a part of a series, so [check out part 1 for context]&#xA;(../building-a-slack-bot-with-python-on-gcp).&lt;/p&gt;&#xA;&lt;p&gt;Warning: As our development of this project was a little &amp;ldquo;all over the place&amp;rdquo;&#xA;as we try to fit it to our busy lives and the Holiday Season, the blog post&#xA;is a little all over the place as well.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#qol-improvements&#34;&gt;QoL improvements&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#slimming-down-the-docker-image-size&#34;&gt;Slimming down the Docker Image size&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#adding-a-test-endpoint-to-the-server-to-make-sure-it-works&#34;&gt;Adding a test endpoint to the server, to make sure it works&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#adding-basic-ci&#34;&gt;Adding basic CI&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#setting-up-a-local-development-environment&#34;&gt;Setting up a local development environment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#designing-and-building-the-bots-business-logic&#34;&gt;Designing and Building the Bot&amp;rsquo;s Business Logic&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#lets-do-some-product---designing-the-user-flows&#34;&gt;Let&amp;rsquo;s do some Product - designing the user flows&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#initial-development---design-mocks-stubs&#34;&gt;Initial development - design, mocks, stubs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#lets-do-some-development---using-bolt&#34;&gt;Let&amp;rsquo;s do some Development - using Bolt&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#lets-get-sidetracked---web-servers-web-applications-and-wsgi&#34;&gt;Let&amp;rsquo;s get sidetracked - Web servers, web applications, and WSGI&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#next-up&#34;&gt;Next up&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;qol-improvements&#34;&gt;QoL improvements&lt;/h2&gt;&#xA;&lt;p&gt;Before moving on the the next big tasks, we wanted to do some small QoL&#xA;improvements, which we introduced in 3 separate PRs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>We Built a Slack Bot for Valet Parking Services: üÖøÔ∏èart 1 | The Start</title>
      <link>https://www.mrnice.dev/posts/building-a-slack-bot-with-python-on-gcp/</link>
      <pubDate>Fri, 27 Aug 2021 15:18:40 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/building-a-slack-bot-with-python-on-gcp/</guid>
      <description>&lt;p&gt;A joint project with my beautiful wife&#xA;&lt;a href=&#34;https://www.linkedin.com/in/olga-beskrovniy-4469b276&#34;&gt;Olga&lt;/a&gt;! &amp;lt;3&lt;/p&gt;&#xA;&lt;p&gt;In this post, we&amp;rsquo;ll go over how we built a Slack Bot that helped my company&#xA;manage parking spots.&lt;/p&gt;&#xA;&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#requirements&#34;&gt;Requirements&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#why-do-this-the-stupid-reason&#34;&gt;Why do this, the stupid reason&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#why-do-this-the-real-reason&#34;&gt;Why do this, the real reason&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#planning&#34;&gt;Planning&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#task-management&#34;&gt;Task Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#working&#34;&gt;Working&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#setting-up-a-working-environment&#34;&gt;Setting up a working environment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#setting-up-gcp&#34;&gt;Setting up GCP&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#developing-an-initial-server&#34;&gt;Developing an initial server&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#containerizing-the-server&#34;&gt;Containerizing the server&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#deploying-the-app-to-the-cloud&#34;&gt;Deploying the app to the cloud&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#connecting-the-server-to-slack&#34;&gt;Connecting the server to Slack&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.mrnice.dev/images/start-with-why.jpeg&#34; alt=&#34;Start With Why&#34; title=&#34;Start With Why&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Devlog #2 | Automation applied to an efficient operation will magnify efficiency</title>
      <link>https://www.mrnice.dev/posts/dev-log-2/</link>
      <pubDate>Tue, 12 May 2020 20:20:31 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/dev-log-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.mrnice.dev/posts/dev-log-1&#34;&gt;Last time&lt;/a&gt; we talked a lot about the HOW. This post is about realizing some parts of that plan into a real working PoC.&lt;/p&gt;&#xA;&lt;p&gt;It only took us &lt;strong&gt;three&lt;/strong&gt; development logs to start writing code. So fast! &lt;em&gt;/s&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/xT39CVCn6Eq8Ve9FZu/giphy.gif&#34; alt=&#34;gotta go fast&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#the-first-step-was-doing-it-manually-once-&#34;&gt;The first step was doing it manually, once üë®üèΩ‚Äçüè≠‚öí&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#writing-a-pre-receive-hook&#34;&gt;Writing a pre-receive hook&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#looking-at-the-push-contents-during-the-pre-receive-execution&#34;&gt;Looking at the push contents during the pre-receive execution&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#manually-performing-all-the-actions-to-deploy-a-game-server&#34;&gt;Manually performing all the actions to deploy a game server&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#starting-to-automate-&#34;&gt;Starting to automate ü§ñ&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#generating-the-pre-receive-hook-automatically-&#34;&gt;Generating the &lt;code&gt;pre-receive&lt;/code&gt; hook automatically ü§ñ&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#i-guess-im-a-rustacean-now-&#34;&gt;I guess I&amp;rsquo;m a Rustacean now ü¶Ä&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#requirements-what-does-the-script-need-to-do&#34;&gt;Requirements: What does the script need to do&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#implementation-breaking-the-problem-into-smaller-problems-and-solving-them-one-by-one&#34;&gt;Implementation: Breaking the problem into smaller problems, and solving them one by one&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#parsing-game-configtoml&#34;&gt;Parsing &lt;code&gt;game-config.toml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#replacing-level-titles-with-their-branches-&#34;&gt;Replacing level titles with their branches üåø&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#output-the-result-into-a-working-pre-receive-hook-file&#34;&gt;Output the result into a working &lt;code&gt;pre-receive&lt;/code&gt; hook file&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#setting-up-the-game-inside-a-docker-container&#34;&gt;Setting up the game inside a Docker container&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#requirements-what-should-the-dockerfile-do&#34;&gt;Requirements: What should the Dockerfile do&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#implementation-what-does-the-dockerfile-actually-do&#34;&gt;Implementation: What does the Dockerfile actually do&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#what-can-be-improved&#34;&gt;What can be improved?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;Side note&lt;/em&gt;: This time I&amp;rsquo;ve been working with my little brother &lt;a href=&#34;https://www.bnice.xyz&#34;&gt;Barak&lt;/a&gt;. His invaluable help (and willingness to work with me) is what will probably tip the scales in favor of this project actually making it to the finish line.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Devlog #1 | The best-laid plans of mice and men</title>
      <link>https://www.mrnice.dev/posts/dev-log-1/</link>
      <pubDate>Sat, 02 May 2020 18:02:38 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/dev-log-1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.mrnice.dev/posts/dev-log-0&#34;&gt;Last time&lt;/a&gt; we talked a lot about the WHY. This post is all about the HOW.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3o7aD1fN85p9F0uuIM/giphy.gif&#34; alt=&#34;Let&amp;rsquo;s get down to business.&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#if-a-task-is-done-and-no-one-marks-it-in-a-ticketing-system-does-it-actually-work&#34;&gt;If a task is done and no one marks it in a ticketing system, does it actually work?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#lets-do-high-level-requirements-first&#34;&gt;Let&amp;rsquo;s do high-level requirements first&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#heres-how-a-user-will-start-playing-the-ctf&#34;&gt;Here&amp;rsquo;s how a user will start playing the CTF&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#heres-the-general-idea-for-how-a-user-plays-a-single-level&#34;&gt;Here&amp;rsquo;s the general idea for how a user plays a single level&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#hld&#34;&gt;HLD&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#planning-the-level-database&#34;&gt;Planning the level database&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#what-defines-level&#34;&gt;What defines &amp;ldquo;Level&amp;rdquo;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#given-this-definition-of-level-whats-the-structure-of-the-db&#34;&gt;Given this definition of &amp;ldquo;Level&amp;rdquo;, what&amp;rsquo;s the structure of the DB&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#level-db-folder-structure&#34;&gt;Level DB folder structure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#envisioning-the-project-structure&#34;&gt;Envisioning the project structure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#back-on-planet-earth-&#34;&gt;Back on planet earth&amp;hellip; üåç&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#next-time&#34;&gt;Next time&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;if-a-task-is-done-and-no-one-marks-it-in-a-ticketing-system-does-it-actually-work&#34;&gt;If a task is done and no one marks it in a ticketing system, does it actually work?&lt;/h2&gt;&#xA;&lt;p&gt;Like I said last time, the first task was to start dumping tasks into a board; &lt;a href=&#34;https://github.com/ShayNehmad/make-git-better-2/projects/1&#34;&gt;lo and behold&lt;/a&gt;. It&amp;rsquo;s still rather empty, but at least there&amp;rsquo;s something tangible to look at.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
