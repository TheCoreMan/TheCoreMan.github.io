<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on mrnice.dev</title>
    <link>https://www.mrnice.dev/tags/design/</link>
    <description>Recent content in Design on mrnice.dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 May 2023 11:57:30 +0300</lastBuildDate>
    <atom:link href="https://www.mrnice.dev/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AI-assisted API Design ü§ñüßë‚Äçüé®</title>
      <link>https://www.mrnice.dev/posts/ai-assisted-api-design/</link>
      <pubDate>Thu, 11 May 2023 11:57:30 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/ai-assisted-api-design/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;My experience working alongside ChatGPT to generate OpenAPI specs.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;As part of a client job (as a newly-minted freelancer!) I got, I needed to&#xA;design an API. I decided to write an OpenAPI spec. I&amp;rsquo;m so used to gRPC that&#xA;looking at the OpenAPI JSONs and YAMLs doesn&amp;rsquo;t &amp;ldquo;gel&amp;rdquo; well in my brain, but I do&#xA;know the basics of API design. And, well&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://media.licdn.com/dms/image/D5612AQHUXa-jZZklog/article-cover_image-shrink_600_2000/0/1681479844175?e=1689206400&amp;amp;v=beta&amp;amp;t=xzA4otaoQOobXSSpzfSd-7GPuzD5KenpWxznQAwsYeE&#34; alt=&#34;AI Overlords&#34; title=&#34;AI Overlords&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;With that in mind, and since the project itself revolves around LLMs, I decided&#xA;to write the spec together with ChatGPT. It went pretty well, so here are my&#xA;thoughts and lessons learned.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Devlog #1 | The best-laid plans of mice and men</title>
      <link>https://www.mrnice.dev/posts/dev-log-1/</link>
      <pubDate>Sat, 02 May 2020 18:02:38 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/dev-log-1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.mrnice.dev/posts/dev-log-0&#34;&gt;Last time&lt;/a&gt; we talked a lot about the WHY. This post is all about the HOW.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3o7aD1fN85p9F0uuIM/giphy.gif&#34; alt=&#34;Let&amp;rsquo;s get down to business.&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#if-a-task-is-done-and-no-one-marks-it-in-a-ticketing-system-does-it-actually-work&#34;&gt;If a task is done and no one marks it in a ticketing system, does it actually work?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#lets-do-high-level-requirements-first&#34;&gt;Let&amp;rsquo;s do high-level requirements first&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#heres-how-a-user-will-start-playing-the-ctf&#34;&gt;Here&amp;rsquo;s how a user will start playing the CTF&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#heres-the-general-idea-for-how-a-user-plays-a-single-level&#34;&gt;Here&amp;rsquo;s the general idea for how a user plays a single level&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#hld&#34;&gt;HLD&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#planning-the-level-database&#34;&gt;Planning the level database&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#what-defines-level&#34;&gt;What defines &amp;ldquo;Level&amp;rdquo;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#given-this-definition-of-level-whats-the-structure-of-the-db&#34;&gt;Given this definition of &amp;ldquo;Level&amp;rdquo;, what&amp;rsquo;s the structure of the DB&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#level-db-folder-structure&#34;&gt;Level DB folder structure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#envisioning-the-project-structure&#34;&gt;Envisioning the project structure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#back-on-planet-earth-&#34;&gt;Back on planet earth&amp;hellip; üåç&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#next-time&#34;&gt;Next time&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;if-a-task-is-done-and-no-one-marks-it-in-a-ticketing-system-does-it-actually-work&#34;&gt;If a task is done and no one marks it in a ticketing system, does it actually work?&lt;/h2&gt;&#xA;&lt;p&gt;Like I said last time, the first task was to start dumping tasks into a board; &lt;a href=&#34;https://github.com/ShayNehmad/make-git-better-2/projects/1&#34;&gt;lo and behold&lt;/a&gt;. It&amp;rsquo;s still rather empty, but at least there&amp;rsquo;s something tangible to look at.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
