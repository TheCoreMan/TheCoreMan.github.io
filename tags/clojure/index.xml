<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clojure on mrnice.dev</title>
    <link>https://www.mrnice.dev/tags/clojure/</link>
    <description>Recent content in Clojure on mrnice.dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Aug 2021 08:32:00 +0300</lastBuildDate>
    <atom:link href="https://www.mrnice.dev/tags/clojure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Foray Into Clojure, Part 2: Polymorphism, Recursion, Debugging, and Sesame Cake | 日々是好日</title>
      <link>https://www.mrnice.dev/posts/first-foray-into-clojure-part-2/</link>
      <pubDate>Sun, 01 Aug 2021 08:32:00 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/first-foray-into-clojure-part-2/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;日々是好日&amp;rdquo; (&lt;em&gt;Nichinichi kore kōnichi&lt;/em&gt;) means &amp;ldquo;Every day is a good day&amp;rdquo;&#xA;or &amp;ldquo;Try to spend every day meaningfully&amp;rdquo;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;This blog post continues directly from &lt;a href=&#34;../first-foray-into-clojure-part-1&#34;&gt;the previous&#xA;one&lt;/a&gt;, so I&amp;rsquo;ll skip the intros. Go read that&#xA;one for context. Let&amp;rsquo;s just jump into it!&lt;/p&gt;&#xA;&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-refresh-toc --&gt;&#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#runtime-polymorphism&#34;&gt;Runtime Polymorphism&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#using-multi-arity-functions&#34;&gt;Using multi-arity functions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#value-based-polymorphism-with-defmulti&#34;&gt;Value-based polymorphism with &lt;code&gt;defmulti&lt;/code&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#comparison-to-other-languages&#34;&gt;Comparison to other languages&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#breaking-down-what-the-code-means&#34;&gt;Breaking down what the code means&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#open-to-extension&#34;&gt;Open to extension&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#lazy-sequences&#34;&gt;Lazy Sequences&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#iterate-is-also-zero-based&#34;&gt;&lt;code&gt;iterate&lt;/code&gt; is also zero-based&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#standing-on-the-shoulders-of-giants---using-identity&#34;&gt;Standing on the shoulders of giants - using &lt;code&gt;identity&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#sequence-comprehensions&#34;&gt;Sequence Comprehensions&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#when-and-other-predefined-keyword-modifiers&#34;&gt;&lt;code&gt;:when&lt;/code&gt; and other predefined keyword modifiers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#creating-functions&#34;&gt;Creating Functions&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#the-let-special-form&#34;&gt;The &lt;code&gt;let&lt;/code&gt; special form&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#function-composition-with-comp&#34;&gt;Function composition with &lt;code&gt;comp&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#recursion&#34;&gt;Recursion&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#use-comment&#34;&gt;Use &lt;code&gt;comment&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#loop-finally-with-no-for-thats-what-i-needed&#34;&gt;&lt;code&gt;loop&lt;/code&gt;?! Finally, with no &lt;code&gt;for&lt;/code&gt;, that&amp;rsquo;s what I needed&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#clojure-debugging&#34;&gt;Clojure Debugging&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#what-now&#34;&gt;What now?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!-- markdown-toc end --&gt;&#xA;&lt;h2 id=&#34;runtime-polymorphism&#34;&gt;Runtime Polymorphism&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;One day someone asked Master Yunmen, “What is the meaning of the teaching?”&lt;/p&gt;</description>
    </item>
    <item>
      <title>Foray Into Clojure, Part 1: Collections, Conditionals, and Meditations | 隻手声あり、その声を聞け?</title>
      <link>https://www.mrnice.dev/posts/first-foray-into-clojure-part-1/</link>
      <pubDate>Fri, 04 Jun 2021 20:39:47 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/first-foray-into-clojure-part-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;隻手声あり、その声を聞け? (Two hands clap and there is a sound. What is the sound of one hand?)&lt;/p&gt;&#xA;&lt;p&gt;- 白隠 慧鶴 (Hakuin Ekaku)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Zen-Master-Hakuin-Ekaku-Self-Portrait-1767.png/440px-Zen-Master-Hakuin-Ekaku-Self-Portrait-1767.png&#34; alt=&#34;Hakuin Ekaku self portrait&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Continuing on the journey of knowledge, I wanted to practice more Clojure. &lt;a href=&#34;../first-foray-into-clojure-part-0&#34;&gt;Last time&lt;/a&gt; we went over first sections of &lt;a href=&#34;https://clojure.org/guides/learn/syntax&#34;&gt;Learn Clojure&lt;/a&gt;: syntax and functions. The main way I learned was by &lt;strong&gt;doing&lt;/strong&gt; the exercises at the bottom of each page. But for the rest of the subjects in the guide, there are no exercises! :(&lt;/p&gt;</description>
    </item>
    <item>
      <title>Foray Into Clojure, Part 0: Setup, syntax, functions</title>
      <link>https://www.mrnice.dev/posts/first-foray-into-clojure-part-0/</link>
      <pubDate>Thu, 27 May 2021 01:03:49 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/first-foray-into-clojure-part-0/</guid>
      <description>&lt;p&gt;I started this post &lt;strong&gt;AFTER&lt;/strong&gt; starting to work on a Clojure script, when I realized I didn&amp;rsquo;t feel comfortable enough with the language and tools to actually start working on the script. I needed to feel more comfortable before starting to work.&lt;/p&gt;&#xA;&lt;p&gt;In this post I go over how to setup a basic Clojure development environment and I solve all the exercises from the &amp;ldquo;Learn Clojure&amp;rdquo; guide, with examples and explanations. If you want to clone my solutions and play around with them yourself, feel free to &lt;a href=&#34;https://github.com/TheCoreMan/learn-clojure&#34;&gt;grab the code itself from my GitHub&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Add EmacsLisp Programs to Emacs - The Hard Way</title>
      <link>https://www.mrnice.dev/posts/shortest-guide-how-to-add-programs-to-emacs/</link>
      <pubDate>Mon, 17 May 2021 15:36:58 +0300</pubDate>
      <guid>https://www.mrnice.dev/posts/shortest-guide-how-to-add-programs-to-emacs/</guid>
      <description>&lt;p&gt;Adding EmacsLips programs to extend Emacs&amp;rsquo;s functionality from source is something I&amp;rsquo;ve found non-obvious (had to open multiple tabs for). Today I&amp;rsquo;ve decided to figure it out, and it&amp;rsquo;s actually very simple, so here&amp;rsquo;s the guide:&lt;/p&gt;&#xA;&lt;h2 id=&#34;a---find-the-program-you-want-to-add&#34;&gt;A - Find the program you want to add&lt;/h2&gt;&#xA;&lt;p&gt;In my case, it was &lt;a href=&#34;https://www.emacswiki.org/emacs/TransposeFrame&#34;&gt;&amp;ldquo;Transpose Frame&amp;rdquo;&lt;/a&gt; by &lt;a href=&#34;https://www.emacswiki.org/emacs/irie&#34;&gt;irie&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve stumbled across it from this &lt;a href=&#34;https://emacs.stackexchange.com/a/5374/31257&#34;&gt;StackExchange answer&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;If the program is available on &lt;a href=&#34;https://melpa.org/#/&#34;&gt;MELPA&lt;/a&gt;, you can just add it to the &lt;code&gt;additional-packages&lt;/code&gt; list in your &lt;code&gt;.spacemacs&lt;/code&gt; config (see &lt;a href=&#34;#d-add-the-program-to-your-spacemacs-configuration&#34;&gt;section D&lt;/a&gt;). However, if it&amp;rsquo;s not, or if you want to do it from source, or you want to do it once &amp;ldquo;the hard way&amp;rdquo; to learn (like I did in this blogpost) you&amp;rsquo;ll need the &lt;code&gt;.el&lt;/code&gt; file that has the program. Grab that file&amp;rsquo;s URL.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
